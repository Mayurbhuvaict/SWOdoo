(function(){var e={229:function(){},761:function(){},634:function(e,t,o){var n=o(229);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),o(346).Z("799170f8",n,!0,{})},960:function(e,t,o){var n=o(761);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),o(346).Z("1e72cf5f",n,!0,{})},346:function(e,t,o){"use strict";function n(e,t){for(var o=[],n={},r=0;r<t.length;r++){var a=t[r],s=a[0],i={id:e+":"+r,css:a[1],media:a[2],sourceMap:a[3]};n[s]?n[s].parts.push(i):o.push(n[s]={id:s,parts:[i]})}return o}o.d(t,{Z:function(){return g}});var r="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!r)throw Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var a={},s=r&&(document.head||document.getElementsByTagName("head")[0]),i=null,c=0,d=!1,l=function(){},u=null,h="data-vue-ssr-id",p="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function g(e,t,o,r){d=o,u=r||{};var s=n(e,t);return f(s),function(t){for(var o=[],r=0;r<s.length;r++){var i=a[s[r].id];i.refs--,o.push(i)}t?f(s=n(e,t)):s=[];for(var r=0;r<o.length;r++){var i=o[r];if(0===i.refs){for(var c=0;c<i.parts.length;c++)i.parts[c]();delete a[i.id]}}}}function f(e){for(var t=0;t<e.length;t++){var o=e[t],n=a[o.id];if(n){n.refs++;for(var r=0;r<n.parts.length;r++)n.parts[r](o.parts[r]);for(;r<o.parts.length;r++)n.parts.push(y(o.parts[r]));n.parts.length>o.parts.length&&(n.parts.length=o.parts.length)}else{for(var s=[],r=0;r<o.parts.length;r++)s.push(y(o.parts[r]));a[o.id]={id:o.id,refs:1,parts:s}}}}function S(){var e=document.createElement("style");return e.type="text/css",s.appendChild(e),e}function y(e){var t,o,n=document.querySelector("style["+h+'~="'+e.id+'"]');if(n){if(d)return l;n.parentNode.removeChild(n)}if(p){var r=c++;t=C.bind(null,n=i||(i=S()),r,!1),o=C.bind(null,n,r,!0)}else t=m.bind(null,n=S()),o=function(){n.parentNode.removeChild(n)};return t(e),function(n){n?(n.css!==e.css||n.media!==e.media||n.sourceMap!==e.sourceMap)&&t(e=n):o()}}var w=function(){var e=[];return function(t,o){return e[t]=o,e.filter(Boolean).join("\n")}}();function C(e,t,o,n){var r=o?"":n.css;if(e.styleSheet)e.styleSheet.cssText=w(t,r);else{var a=document.createTextNode(r),s=e.childNodes;s[t]&&e.removeChild(s[t]),s.length?e.insertBefore(a,s[t]):e.appendChild(a)}}function m(e,t){var o=t.css,n=t.media,r=t.sourceMap;if(n&&e.setAttribute("media",n),u.ssrId&&e.setAttribute(h,t.id),r&&(o+="\n/*# sourceURL="+r.sources[0]+" */\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+" */"),e.styleSheet)e.styleSheet.cssText=o;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(o))}}}},t={};function o(n){var r=t[n];if(void 0!==r)return r.exports;var a=t[n]={id:n,exports:{}};return e[n](a,a.exports,o),a.exports}o.d=function(e,t){for(var n in t)o.o(t,n)&&!o.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="bundles/ictechodooshopwareconnector/",window?.__sw__?.assetPath&&(o.p=window.__sw__.assetPath+"/bundles/ictechodooshopwareconnector/"),function(){"use strict";o(960);let{Component:e,Mixin:t}=Shopware,{Criteria:n}=Shopware.Data;e.register("shopware-odoo-connector-configuration",{template:'{% block shopware_odoo_connector_configuration %}\n    <sw-page class="shopware-odoo-connector-configuration">\n        {% block shopware_odoo_connector_configuration_header %}\n            <template #smart-bar-header>\n                <h2>\n                    {{ $tc(\'sw-settings.index.title\') }}\n                    <sw-icon name="regular-chevron-right-xs" small></sw-icon>\n                    {{ $tc(\'shopware-odoo-connector-configuration.header\') }}\n                </h2>\n            </template>\n        {% endblock %}\n\n        {% block shopware_odoo_connector_configuration_actions %}\n            <template #smart-bar-actions>\n                {% block shopware_odoo_connector_configuration_actions_save %}\n                    <sw-button-process v-model:value="isSaveSuccessful"\n                                       class="sw-settings-login-registration__save-action"\n                                       variant="primary"\n                                       :isLoading="isLoading"\n                                       :disabled="isLoading"\n                                       @click="onSave">\n                        {{ $tc(\'global.default.save\') }}\n                    </sw-button-process>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        {% block shopware_odoo_connector_configuration_content %}\n            <template #content>\n                {% block shopware_odoo_connector_configration_saleschannel %}\n                    <sw-card-view>\n                        <sw-sales-channel-config v-model:value="config"\n                                                 ref="configComponent"\n                                                 domain="ICTECHOdooShopwareConnector.settings">\n\n                            {% block shopware_odoo_configuration_content_card_channel_config_sales_channel %}\n                                <template #select="{ onInput, selectedSalesChannelId }">\n                                    <sw-card positionIdentifier="" :title="$tc(\'global.entities.sales_channel\', 2)">\n                                        {% block shopware_odoo_configuration_content_card_channel_config_sales_channel_card_title %}\n                                            <sw-single-select v-model:value="selectedSalesChannelId"\n                                                              labelProperty="translated.name"\n                                                              valueProperty="id"\n                                                              :isLoading="isLoading"\n                                                              :options="salesChannels"\n                                                              @change="onInput">\n                                            </sw-single-select>\n                                        {% endblock %}\n                                    </sw-card>\n                                </template>\n                            {% endblock %}\n\n                            {% block shopware_odoo_configuration_content_card_channel_config_cards %}\n                                <template #content="{ actualConfigData, allConfigs, selectedSalesChannelId }">\n                                    <div v-if="actualConfigData">\n                                        <sw-card positionIdentifier=""\n                                                 :title="$tc(\'shopware-odoo-connector-configuration.apiSection.url\')">\n                                            <sw-container>\n                                                <div class="select-field">\n                                                    <sw-inherit-wrapper\n                                                            v-model:value="actualConfigData[\'ICTECHOdooShopwareConnector.settings.webUrl\']"\n                                                            :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'ICTECHOdooShopwareConnector.settings.webUrl\']"\n                                                            :customInheritationCheckFunction="checkTextFieldInheritance"\n                                                            :label="$tc(\'shopware-odoo-connector-configuration.apiSection.webUrl\') ">\n                                                        <template #content="props">\n                                                            <sw-text-field\n                                                                    v-model:value="props.currentValue"\n                                                                    @update:value="props.updateCurrentValue"\n                                                                    :disabled="props.isInherited || !acl.can(\'ICTECHOdooShopwareConnector.editor\')">\n                                                            </sw-text-field>\n\n                                                            <div class="button-field">\n                                                                <sw-button :isLoading="isLoadingAuth"\n                                                                           variant="primary"\n                                                                           @click="checkWebSiteCredential()">\n                                                                    {{ $tc(\'shopware-odoo-connector-configuration.apiSection.webUrlButton\') }}\n                                                                </sw-button>\n                                                            </div>\n                                                        </template>\n                                                    </sw-inherit-wrapper>\n                                                </div>\n                                            </sw-container>\n                                        </sw-card>\n\n                                        <sw-card positionIdentifier=""\n                                                 :title="$tc(\'shopware-odoo-connector-configuration.general.productSalesChannelSelect\')">\n                                            <sw-multi-select\n                                                    v-model:value="actualConfigData[\'ICTECHOdooShopwareConnector.settings.productSalesChannel\']"\n                                                    labelProperty="translated.name"\n                                                    valueProperty="id"\n                                                    :isLoading="isLoading"\n                                                    :options="salesChannels"\n                                                    @update:value="onInput"\n                                            >\n                                            </sw-multi-select>\n\n                                        </sw-card>\n\n                                        <sw-card positionIdentifier=""\n                                                 :title="$tc(\'shopware-odoo-connector-configuration.general.syncData\')">\n                                            <sw-container>\n                                                <sw-card positionIdentifier=""\n                                                         :title="$tc(\'shopware-odoo-connector-configuration.general.syncShopwareData\')">\n                                                    <div class="shopware-odoo-configuration-manually-sync-defaultdata">\n                                                        <div class="sync-odoo-btn">\n                                                            <div class="button-field">\n                                                                <b>{{ categoryCount }}</b>\n                                                            </div>\n                                                            <div class="button-field">\n                                                                <sw-button :isLoading="isLoadingCategory"\n                                                                           variant="primary"\n                                                                           @click="fetchCategoryData()">\n                                                                    {{ $tc(\'shopware-odoo-connector-configuration.button.categoryButtonTitle\') }}\n                                                                </sw-button>\n                                                            </div>\n                                                        </div>\n                                                        <div class="sync-odoo-btn">\n                                                            <div class="button-field">\n                                                                <b>{{ currencyCount }}</b>\n                                                            </div>\n                                                            <div class="button-field">\n                                                                <sw-button :isLoading="isLoadingCurrency"\n                                                                           variant="primary"\n                                                                           @click="fetchCurrencyData()">\n                                                                    {{ $tc(\'shopware-odoo-connector-configuration.button.currencyButtonTitle\') }}\n                                                                </sw-button>\n                                                            </div>\n                                                        </div>\n                                                        <div class="sync-odoo-btn">\n                                                            <div class="button-field">\n                                                                <b>{{ orderStatusSyncCount }}</b>\n                                                            </div>\n                                                            <div class="button-field">\n                                                                <sw-button :isLoading="isLoadingSyncOrderStatus"\n                                                                           variant="primary"\n                                                                           @click="syncOdooOrderStatus()">\n                                                                    {{ $tc(\'shopware-odoo-connector-configuration.button.odooOrderStatusButtonTitle\') }}\n                                                                </sw-button>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </sw-card>\n                                                <sw-card positionIdentifier=""\n                                                         :title="$tc(\'shopware-odoo-connector-configuration.general.syncOdooData\')">\n                                                    <div class="shopware-odoo-configuration-manually-sync-custom-data">\n\n                                                        <div class="sync-odoo-btn">\n                                                            <div class="button-field">\n                                                                <b>{{ customerCount }}</b>\n                                                            </div>\n                                                            <sw-button :isLoading="isLoadingSyncCustomer"\n                                                                       variant="primary"\n                                                                       @click="syncCustomerData()">\n                                                                {{ $tc(\'shopware-odoo-connector-configuration.button.customerButtonTitle\') }}\n                                                            </sw-button>\n                                                        </div>\n                                                        <div class="sync-odoo-btn">\n                                                            <div class="button-field">\n                                                                <b>{{ orderCount }}</b>\n                                                            </div>\n\n                                                            <sw-button :isLoading="isLoadingSyncOrder"\n                                                                       variant="primary"\n                                                                       @click="syncOrderData()">\n                                                                {{ $tc(\'shopware-odoo-connector-configuration.button.orderButtonTitle\') }}\n                                                            </sw-button>\n                                                        </div>\n                                                    </div>\n                                                </sw-card>\n                                            </sw-container>\n                                        </sw-card>\n\n\n                                        <sw-card positionIdentifier=""\n                                                 :title="$tc(\'shopware-odoo-connector-configuration.general.orderStatusConfigurations\')">\n                                            <sw-container>\n                                                <sw-data-grid\n                                                        :data-source="defaultShopwareStatuses"\n                                                        :columns="statusDataColumn"\n                                                        :showSelection="false"\n                                                        :showActions="false"\n                                                >\n                                                    <template #column-shopwareDelivery="{ item }">\n                                                        <label>{{ item.name }}</label>\n                                                    </template>\n\n                                                    <template #column-odooDeliveryStatus="{ item }">\n                                                        <sw-single-select\n                                                                v-model:value="actualConfigData[`ICTECHOdooShopwareConnector.settings.odooDeliveryOption-${item.technicalName}`]"\n                                                                name="ICTECHOdooShopwareConnector.settings.odooOrderDeliveryOpen"\n                                                                :options="odooOrderDelivery"\n                                                                size="small"\n                                                                labelProperty="odooStatus"\n                                                                valueProperty="odooStatusKey">\n                                                        </sw-single-select>\n                                                    </template>\n\n                                                    <template #column-shopwareOrderStatus="{ item }">\n                                                        <sw-single-select\n                                                                v-model:value="actualConfigData[`ICTECHOdooShopwareConnector.settings.shopwareOrderStatus-${item.technicalName}`]"\n                                                                name="ICTECHOdooShopwareConnector.settings.orderStatusOpen"\n                                                                :options="orderStatusOptions"\n                                                                size="small"\n                                                                labelProperty="name"\n                                                                valueProperty="technicalName">\n                                                        </sw-single-select>\n                                                    </template>\n                                                </sw-data-grid>\n                                            </sw-container>\n                                        </sw-card>\n                                    </div>\n                                </template>\n                            {% endblock %}\n                        </sw-sales-channel-config>\n                    </sw-card-view>\n                {% endblock %}\n            </template>\n        {% endblock %}\n    </sw-page>\n{% endblock %}\n',inject:["repositoryFactory","configService","acl","stateMachineService"],mixins:[t.getByName("notification")],data(){return{salesChannels:[],defaultShopwareStatuses:[],orderStatusOptions:[],odooOrderTransaction:[],orderPaymentOptions:[],odooOrderDelivery:[],orderDeliveryOptions:[],odooOrderOptions:[],domainId:null,config:null,productSalesChannel:[],categoryCount:0,currencyCount:0,orderStatusSyncCount:0,customerCount:0,orderCount:0,isLoadingAuth:!1,disabled:!0,isLoading:!1,isSaveSuccessful:!1,isLoadingCategory:!1,isLoadingCurrency:!1,isLoadingSyncCustomer:!1,isLoadingSyncOrder:!1,isLoadingSyncOrderStatus:!1}},watch:{config:{handler(){this.domainId=this.$refs.configComponent.selectedSalesChannelId},deep:!0},shopwareOdooStatusArray:{handler(e){this.actualConfigData["ICTECHOdooShopwareConnector.settings.statusesMapping"]||this.$set(this.actualConfigData,"ICTECHOdooShopwareConnector.settings.statusesMapping",[]),this.$set(this.actualConfigData,"ICTECHOdooShopwareConnector.settings.statusesMapping",e)},deep:!0}},computed:{salesChannelRepository(){return this.repositoryFactory.create("sales_channel")},StateMachineStateRepository(){return this.repositoryFactory.create("state_machine_state")},odooOrderStatusRepository(){return this.repositoryFactory.create("odoo_order_status")},categoryRepository(){return this.repositoryFactory.create("category")},currencyRepository(){return this.repositoryFactory.create("currency")},orderStatusSyncRepository(){return this.repositoryFactory.create("odoo_order_status")},customerRepository(){return this.repositoryFactory.create("customer")},orderRepository(){return this.repositoryFactory.create("order")},statusDataColumn(){return[{property:"name",label:this.$tc("shopware-odoo-connector-configuration.general.shopwareDeliveryStatus")},{property:"odooDeliveryStatus",label:this.$tc("shopware-odoo-connector-configuration.general.odooDeliveryStatus")},{property:"shopwareOrderStatus",label:this.$tc("shopware-odoo-connector-configuration.general.shopwareOrderStatus")}]},actualConfigData(){return this.$refs.configComponent?.actualConfigData||{}},shopwareOdooStatusArray:{get(){return this.actualConfigData["ICTECHOdooShopwareConnector.settings.statusesMapping"]||[]},set(e){let t=this.$refs.configComponent;this.$set(t,"allConfigs",{...t.allConfigs,[t.selectedSalesChannelId]:{...t.allConfigs[t.selectedSalesChannelId]||{},"ICTECHOdooShopwareConnector.settings.statusesMapping":e}})}}},created(){this.loadDefaultShopwareStatuses(),this.createdComponent(),this.orderStatusComponent(),this.orderTransactionComponent(),this.odooOrderStatusOptionsComponent(),this.odooOrderStatusComponent(),this.odooOrderDeliveryComponent(),this.categoryCountComponent(),this.currencyCountComponent(),this.customerCountComponent(),this.orderCountComponent(),this.odooOrderStatusCountComponent()},methods:{async loadDefaultShopwareStatuses(){this.defaultShopwareStatuses=await this.fetchOrderDelieveryStatuses(),console.log("this.defaultShopwareStatuses",this.defaultShopwareStatuses)},createdComponent(){let e=new n;this.salesChannelRepository.search(e,Shopware.Context.api).then(e=>{e.add({id:null,translated:{name:this.$tc("sw-sales-channel-switch.labelDefaultOption")}}),this.salesChannels=e}).finally(()=>{this.isLoading=!1})},checkTextFieldInheritance(e){return"string"!=typeof e||e.length<=0},onSave(){this.isLoading=!0,this.$refs.configComponent.save().then(()=>{this.isSaveSuccessful=!0,this.createNotificationSuccess({title:this.$tc("shopware-odoo-connector-configuration.action.titleSaveSuccess"),message:this.$tc("shopware-odoo-connector-configuration.action.messageSaveSuccess")})}).catch(e=>{this.createNotificationError({title:this.$tc("shopware-odoo-connector-configuration.action.Error"),message:e.message}),this.isLoadingAuth=!1}).finally(()=>{this.isLoading=!1})},categoryCountComponent(){let e=new n;e.addFilter(n.not("or",[n.equals("customFields.odoo_category_id",null),n.equals("customFields.odoo_category_id",0)])),this.categoryRepository.search(e,Shopware.Context.api).then(e=>{this.categoryCount=e.total}).finally(()=>{this.isLoading=!1})},currencyCountComponent(){let e=new n;e.addFilter(n.not("or",[n.equals("customFields.odoo_currency_id",null)])),this.currencyRepository.search(e,Shopware.Context.api).then(e=>{this.currencyCount=e.total}).finally(()=>{this.isLoading=!1})},odooOrderStatusCountComponent(){let e=new n;this.orderStatusSyncRepository.search(e,Shopware.Context.api).then(e=>{this.orderStatusSyncCount=e.total}).finally(()=>{this.isLoading=!1})},customerCountComponent(){let e=new n;e.addFilter(n.not("or",[n.equals("customFields.odoo_customer_id",null)])),e.addFilter(n.not("or",[n.equals("customFields.odoo_customer_sync_status","false")])),this.customerRepository.search(e,Shopware.Context.api).then(e=>{this.customerCount=e.total}).finally(()=>{this.isLoading=!1})},orderCountComponent(){let e=new n;e.addFilter(n.not("or",[n.equals("customFields.odoo_order_id",null)])),e.addFilter(n.not("or",[n.equals("customFields.odoo_order_sync_status","false")])),this.orderRepository.search(e,Shopware.Context.api).then(e=>{this.orderCount=e.total}).finally(()=>{this.isLoading=!1})},async fetchOrderDelieveryStatuses(){let e=new n;return e.addAssociation("stateMachine"),e.addFilter(n.equals("stateMachine.technicalName","order_delivery.state")),await this.StateMachineStateRepository.search(e,Shopware.Context.api)},orderStatusComponent(){let e=new n;e.addAssociation("stateMachine"),e.addFilter(n.equals("stateMachine.technicalName","order.state")),this.StateMachineStateRepository.search(e,Shopware.Context.api).then(e=>{this.orderStatusOptions=e}).finally(()=>{this.isLoading=!1})},orderTransactionComponent(){let e=new n;e.addAssociation("stateMachine"),e.addFilter(n.equals("stateMachine.technicalName","order_transaction.state")),this.StateMachineStateRepository.search(e,Shopware.Context.api).then(e=>{this.orderPaymentOptions=e}).finally(()=>{this.isLoading=!1})},odooOrderStatusOptionsComponent(){let e=new n;e.addFilter(n.equals("odooStatusType","sale_states")),this.odooOrderStatusRepository.search(e,Shopware.Context.api).then(e=>{this.odooOrderOptions=e}).finally(()=>{this.isLoading=!1})},odooOrderStatusComponent(){let e=new n;e.addFilter(n.equals("odooStatusType","payment_states")),this.odooOrderStatusRepository.search(e,Shopware.Context.api).then(e=>{this.odooOrderTransaction=e}).finally(()=>{this.isLoading=!1})},odooOrderDeliveryComponent(){let e=new n;e.addFilter(n.equals("odooStatusType","delivery_states")),this.odooOrderStatusRepository.search(e,Shopware.Context.api).then(e=>{this.odooOrderDelivery=e}).finally(()=>{this.isLoading=!1})},checkWebSiteCredential(){this.isLoadingAuth=!0;let e=this.configService.getBasicHeaders();return this.configService.httpClient.post("/check/web-url-credential",{},{headers:e}).then(e=>{200===e.data.responseCode?this.createNotificationSuccess({title:"Success",message:e.data.message}):400===e.data.responseCode&&this.createNotificationError({title:"Error",message:this.$tc("shopware-odoo-connector-configuration.apiSection.enterUrlError")}),this.isLoadingAuth=!1}).catch(e=>{this.createNotificationError({title:"Error",message:this.$tc("shopware-odoo-connector-configuration.apiSection.errorAuthenticate")}),this.isLoadingAuth=!1})},fetchCategoryData(){this.isLoading=!0;let e=this.configService.getBasicHeaders();return this.configService.httpClient.post("/category/default/odoo",{},{headers:e}).then(e=>{200===e.data.responseCode?this.createNotificationSuccess({title:e.data.type,message:this.$tc("ictech-shopware-odoo-connector.successMessageCategory")}):400===e.data.responseCode&&this.createNotificationError({title:e.data.type,message:this.$tc("shopware-odoo-connector-configuration.apiSection.enterUrlError")}),this.isLoading=!1}).catch(e=>{this.createNotificationError({title:"Error",message:this.$tc("shopware-odoo-connector-configuration.apiSection.errorAuthenticate")}),this.isLoading=!1})},fetchCurrencyData(){this.isLoadingCurrency=!0;let e=this.configService.getBasicHeaders();return this.configService.httpClient.post("/currency/default/odoo",{},{headers:e}).then(e=>{200===e.data.responseCode?this.createNotificationSuccess({title:e.data.type,message:this.$tc("ictech-shopware-odoo-connector.successMessageCurrency")}):400===e.data.responseCode&&this.createNotificationError({title:e.data.type,message:this.$tc("shopware-odoo-connector-configuration.apiSection.enterUrlError")}),this.isLoadingCurrency=!1}).catch(e=>{this.createNotificationError({title:"Error",message:this.$tc("shopware-odoo-connector-configuration.apiSection.errorAuthenticate")}),this.isLoadingCurrency=!1})},syncCustomerData(){this.isLoadingSyncCustomer=!0;let e=this.configService.getBasicHeaders();return this.configService.httpClient.post("/pending/customer-sync",{},{headers:e}).then(e=>{200===e.data.responseCode?this.createNotificationSuccess({title:"Success",message:this.$tc("ictech-shopware-odoo-connector.successMessageSyncCustomer")}):(400===e.data.responseCode&&this.createNotificationError({title:e.data.type,message:this.$tc("shopware-odoo-connector-configuration.apiSection.enterUrlError")}),this.isLoadingSyncOrder=!1),this.isLoadingSyncCustomer=!1}).catch(e=>{this.createNotificationError({title:"Error",message:this.$tc("shopware-odoo-connector-configuration.apiSection.errorAuthenticate")}),this.isLoadingSyncCustomer=!1})},syncOrderData(){this.isLoadingSyncOrder=!0;let e=this.configService.getBasicHeaders();return this.configService.httpClient.post("/pending/order-sync",{},{headers:e}).then(e=>{200===e.data.responseCode?this.createNotificationSuccess({title:"Success",message:this.$tc("ictech-shopware-odoo-connector.successMessageSyncOrder")}):(400===e.data.responseCode&&this.createNotificationError({title:e.data.type,message:this.$tc("shopware-odoo-connector-configuration.apiSection.enterUrlError")}),this.isLoadingSyncOrder=!1)}).catch(e=>{this.createNotificationError({title:"Error",message:this.$tc("shopware-odoo-connector-configuration.apiSection.errorAuthenticate")}),this.isLoadingSyncOrder=!1})},syncOdooOrderStatus(){this.isLoadingSyncOrderStatus=!0;let e=this.configService.getBasicHeaders();return this.configService.httpClient.post("/odoo/order/status",{},{headers:e}).then(e=>{200===e.data.responseCode?this.createNotificationSuccess({title:e.data.type,message:this.$tc("ictech-shopware-odoo-connector.successMessageOrderStatus")}):400===e.data.responseCode&&this.createNotificationError({title:e.data.type,message:this.$tc("shopware-odoo-connector-configuration.apiSection.enterUrlError")}),this.isLoadingSyncOrderStatus=!1}).catch(e=>{this.createNotificationError({title:"Error",message:this.$tc("shopware-odoo-connector-configuration.apiSection.errorAuthenticate")}),this.isLoadingSyncOrderStatus=!1})}}}),o(634);let{Component:r}=Shopware;r.register("shopware-odoo-connector-configuration-icon",{template:'{% block shopware_odoo_connector_icon %}\n    <img\n            class="shopware-odoo-connector-icon"\n            :src="assetFilter(\'ictechodooshopwareconnector/static/img/plugin.png\')"\n            alt="shopware_odoo_connector_icon"\n    >\n{% endblock %}\n\n',computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}});var a=JSON.parse('{"shopware-odoo-connector-configuration-action":{"default":{"save":"Speichern Sie"}},"shopware-odoo-connector-configuration":{"apiSection":{"webUrlButton":"Url-Berechtigung pr\xfcfen","webUrl":"Url eingeben","url":"Authentifizierung","errorAuthenticate":"URL ist nicht g\xfcltig","enterUrlError":"Bitte Url eingeben"},"header":"Shopware Odoo Connector","general":{"shopwareDeliveryStatus":"Shopware-Lieferstatus","odooDeliveryStatus":"Odoo Lieferstatus","shopwareOrderStatus":"Shopware Bestellstatus","productSalesChannelSelect":"Verkaufskanal f\xfcr die Einstellung des Produkts ausw\xe4hlen","syncData":"Daten synchronisieren","syncShopwareData":"Mit Shopware-Daten synchronisieren","syncOdooData":"Mit Odoo-Daten synchronisieren","name":"Shopware Odoo Connector","mainMenuItemGeneral":"Shopware Odoo Connector","descriptionTextModule":"Shopware Odoo Connector","orderStatusConfigurations":"Bestellstatus-Konfigurationen","orderConfigurations":"Bestellungskonfigurationen"},"button":{"categoryButtonTitle":"Kategorie Sync","currencyButtonTitle":"W\xe4hrungssynchronisation","customerButtonTitle":"Kunden Sync","orderButtonTitle":"Bestellungssynchronisation","odooOrderStatusButtonTitle":"Odoo Auftragsstatus Sync","manufactureButtonTitle":"Herstellung Sync"},"action":{"titleSaveSuccess":"Erfolg","titleSaveError":"Fehler","messageSaveSuccess":"Daten erfolgreich gespeichert","error":"Bitte pr\xfcfen Sie, ob die Daten nicht gespeichert wurden."}}}'),s=JSON.parse('{"shopware-odoo-connector-configuration-action":{"default":{"save":"Save"}},"shopware-odoo-connector-configuration":{"apiSection":{"webUrlButton":"Check Url Credential","webUrl":"Enter Url","url":"Authentication","errorAuthenticate":"URL is not valid","enterUrlError":"Please Enter Url"},"header":"Shopware Odoo Connector","general":{"shopwareDeliveryStatus":"Shopware delivery status","odooDeliveryStatus":"Odoo delivery status","shopwareOrderStatus":"Shopware Order status","productSalesChannelSelect":"Select salesChannel for set the product","syncData":"Sync data","syncShopwareData":"Sync to shopware data","syncOdooData":"Sync to odoo data","name":"Shopware Odoo Connector","mainMenuItemGeneral":"Shopware Odoo Connector","descriptionTextModule":"Shopware Odoo Connector","orderStatusConfigurations":"Order Status Configurations","orderConfigurations":"Order Configurations"},"button":{"categoryButtonTitle":"Category Sync","currencyButtonTitle":"Currency Sync","customerButtonTitle":"Customer Sync","orderButtonTitle":"Order Sync","odooOrderStatusButtonTitle":"Odoo Order Status Sync","manufactureButtonTitle":"Manufacture Sync"},"action":{"titleSaveSuccess":"Success","titleSaveError":"Error","messageSaveSuccess":"Data saved successfully","error":"Please check data not saved."}}}');Shopware.Module.register("shopware-odoo-connector-configuration",{type:"plugin",name:"shopware-odoo-connector-configuration.general.name",title:"shopware-odoo-connector-configuration.general.mainMenuItemGeneral",description:"shopware-odoo-connector-configuration.general.descriptionTextModule",color:"#ff3d58",icon:"regular-cog",snippets:{"de-DE":a,"en-GB":s},routes:{index:{component:"shopware-odoo-connector-configuration",path:"index",meta:{parentPath:"sw.settings.index"}}},settingsItem:{group:"plugins",iconComponent:"shopware-odoo-connector-configuration-icon",to:"shopware.odoo.connector.configuration.index",backgroundEnabled:!0}})}()})();